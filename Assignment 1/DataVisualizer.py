import matplotlib.pyplot as plt
import numpy as np

#data copied from text file that was generated by tests done with Timer.java class
merge_insertion = [49300, 78500, 73000, 56700, 57200, 61000, 50700, 68300, 69300, 72000, 46100, 55100, 47300, 69300, 65400, 66900, 54900, 51000, 7200, 60100, 57700, 80700]
merge = [58800, 87400, 65300, 60700, 78800, 75200, 78400, 75300, 62500, 78200, 76100, 62200, 78300, 60400, 75200, 65600, 74000, 68300, 58000, 70800, 60500, 66300]
selection = [99800, 100400, 99900, 98800, 98600, 98400, 99300, 98000, 118100, 96700, 101200, 96600, 85200, 61400, 76500, 71300, 64300, 112300, 101000, 62800, 110000, 75900]
insertion = [95200, 95000, 97600, 99800, 100100, 98800, 99200, 99000, 104200, 98100, 97000, 88800, 74800, 65200, 64800, 59900, 54200, 67000, 57700, 74500, 57400, 43200]
bubble = [254400, 210500, 237100, 194400, 203500, 217100, 259800, 162000, 184300, 233800, 149200, 46500, 100400, 84100, 54900, 110700, 69300, 118300, 60600, 29700, 70900, 46500]

#plot that displays the performance of each algorithm on a specific array size
def display_plot():
    plt.plot(range(22), merge_insertion, color='black')
    plt.plot(range(22), merge, color='red')
    plt.plot(range(22), selection, color='green')
    plt.plot(range(22), insertion, color='blue')
    plt.plot(range(22), bubble, color='yellow')
    plt.gca().axes.get_xaxis().set_visible(False)
    plt.ylabel("time in ns")
    plt.title('Sorting algorithms on arrays of size 100')
    plt.legend(['merge_insertion',\
                'merge ',
                'selection',\
                'insertion',\
                'bubble'])
    plt.show()

#printing to the console the average time of each algorithm
def print_averages():
    sort_algorithms = [merge_insertion, merge, selection, insertion, bubble]
    algorithm_names = ['merge_insertion', 'merge', 'selection', 'insertion', 'bubble']
    print('Average time for sorts on arrays of size 100')
    for i in range(5):
        average = int(np.mean(sort_algorithms[i]))
        print(f'{algorithm_names[i]} average: {average} ns')

def main():
    display_plot()
    print_averages()

if __name__ == '__main__':
    main()
