import matplotlib.pyplot as plt
import numpy as np

#data copied from text file that was generated by tests done with Timer.java class
merge_insertion = [1522200, 244800, 118600, 61200, 61900, 63200, 58200, 61300, 59800, 60000, 57700, 60600, 63600, 55900, 58600, 282900, 88000, 53900, 58300, 60000, 57000, 54800, 59200, 66500, 119000]
merge = [1587400, 306700, 241500, 214700, 87400, 35300, 30700, 28800, 25200, 28400, 25300, 32500, 28200, 36100, 32200, 28300, 30400, 25200, 25600, 24000, 28300, 28000, 20800, 20500, 16300]
selection = [1197100, 394600, 104600, 103000, 102300, 103100, 104200, 102600, 103100, 102100, 102500, 108300, 101800, 276200, 64300, 160600, 58700, 25600, 65300, 25300, 74300, 72800, 25200, 63200, 45200]
insertion = [1239400, 136300, 156600, 155700, 183100, 170400, 140000, 155000, 142300, 142400, 153700, 165600, 157600, 164900, 146900, 159200, 155600, 138700, 151400, 175700, 228300, 155500, 131100, 173400, 154500]
bubble = [1253400, 196600, 251800, 254400, 210500, 237100, 194400, 203500, 217100, 259800, 162000, 184300, 233800, 149200, 46500, 100400, 84100, 54900, 110700, 69300, 118300, 60600, 29700, 70900, 46500]

#plot that displays the performance of each algorithm on a specific array size
def display_plot():
    plt.plot(range(25), merge_insertion, color='black')
    plt.plot(range(25), merge, color='red')
    plt.plot(range(25), selection, color='green')
    plt.plot(range(25), insertion, color='blue')
    plt.plot(range(25), bubble, color='yellow')
    plt.ylabel("time in ns")
    plt.title('Sorting algorithms on arrays of size 100')
    plt.legend(['merge_insertion',\
                'merge ',
                'selection',\
                'insertion',\
                'bubble'])
    plt.show()

#printing to the console the average time of each algorithm 
def print_averages():
    sort_algorithms = [merge_insertion, merge, selection, insertion, bubble]
    algorithm_names = ['merge_insertion', 'merge', 'selection', 'insertion', 'bubble']
    print('Average time for sorts on arrays of size 100')
    for i in range(5):
        average = int(np.mean(sort_algorithms[i]))
        print(f'{algorithm_names[i]} average: {average} ns')

def main():
    display_plot()
    print_averages()

if __name__ == '__main__':
    main()
