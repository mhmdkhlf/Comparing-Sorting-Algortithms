import matplotlib.pyplot as plt
import numpy as np

#data copied from text file that was generated by tests done with Timer.java class
merge = [126, 127, 124, 129, 124, 127, 123, 125, 122, 124, 123, 124, 123, 124, 122, 125, 123, 124, 123, 125, 123, 126, 125, 125, 122, 125, 126, 127, 129, 129, 125, 127, 124, 125, 126, 125, 124, 127, 125, 127, 126, 129, 125, 124, 123, 125, 124, 125, 124, 126]
merge_insertion = [93, 88, 91, 93, 92, 93, 90, 95, 92, 90, 96, 92, 92, 91, 91, 93, 90, 96, 97, 95, 93, 90, 91, 94, 92, 92, 94, 95, 100, 96, 89, 89, 90, 94, 89, 94, 94, 98, 96, 93, 91, 93, 90, 92, 97, 92, 93, 93, 95, 93]
quick = [71, 70, 70, 70, 71, 69, 69, 70, 72, 69, 69, 69, 69, 69, 69, 70, 71, 70, 69, 69, 69, 70, 69, 70, 70, 70, 69, 69, 71, 68, 69, 68, 69, 69, 71, 68, 70, 69, 69, 69, 69, 69, 69, 68, 69, 69, 69, 70, 69, 69]
quick_insertion = [69, 69, 68, 68, 68, 68, 68, 68, 69, 67, 70, 68, 69, 67, 68, 68, 68, 66, 67, 67, 67, 68, 67, 68, 69, 68, 68, 69, 67, 66, 66, 65, 67, 66, 67, 69, 67, 68, 67, 67, 67, 68, 68, 67, 67, 68, 67, 68, 67, 67]
heap = [121, 124, 120, 121, 120, 119, 119, 120, 121, 119, 118, 120, 121, 117, 119, 119, 119, 119, 118, 120, 119, 119, 119, 119, 119, 118, 119, 118, 119, 117, 119, 118, 121, 120, 119, 118, 119, 118, 119, 119, 120, 130, 119, 118, 119, 119, 119, 120, 121, 119]
radix = [83, 80, 78, 80, 78, 90, 77, 77, 81, 79, 78, 78, 75, 79, 75, 75, 74, 74, 75, 71, 76, 78, 78, 72, 74, 76, 74, 73, 74, 78, 74, 72, 76, 76, 77, 72, 75, 74, 76, 71, 75, 75, 75, 72, 76, 76, 77, 74, 76, 75]

#plot that displays the performance of each algorithm on a specific array size
def display_plot():
    plt.plot(range(50), merge, color='black')
    plt.plot(range(50), merge_insertion, color='red')
    plt.plot(range(50), quick, color='green')
    plt.plot(range(50), quick_insertion, color='blue')
    plt.plot(range(50), heap, color='yellow')
    plt.plot(range(50), radix, color='purple')
    plt.gca().axes.get_xaxis().set_visible(False)
    plt.ylabel("time in milliseconds")
    plt.title('Array size: 1 000 000 \n range of numbers: 0 - 9 999 999')
    plt.legend(['merge',\
                'merge-insertion ',
                'quick',\
                'quick-insertion',\
                'heap',\
                'radix'])
    plt.show()

#printing to the console the average time of each algorithm
def print_averages():
    sort_algorithms = [merge, merge_insertion, quick, quick_insertion, heap, radix]
    algorithm_names = ['merge', 'merge-insertion', 'quick', 'quick-insertion', 'heap', 'radix']
    print('Average time for sorts on arrays of size 1_000_000')
    for i in range(6):
        average = int(np.mean(sort_algorithms[i]))
        print(f'{algorithm_names[i]} average: {average} ns')

def main():
    display_plot()
    print_averages()

if __name__ == '__main__':
    main()